hydra:
  run:
    dir: !ENV ${OUT}/${project.name}/${project.job}/${now:%Y-%m-%d}/${now:%H-%M-%S}
  sweep:
    dir: !ENV ${OUT}/${project.name}/${project.job}/${now:%Y-%m-%d}/${now:%H-%M-%S}

project:
  name: age
  job: ukb_liver_volume
  seed: 42

trainer:
  gpus: 1
  max_epochs: 200
  benchmark: True
  deterministic: False  # not possible, since PyTorch did not implement maxpool deterministic backward path!
  #limit_train_batches: 0.1
  #limit_val_batches: 0.1
  #limit_val_batches: 0.25
  val_check_interval: 1.0
  #early_stop_callback: False
  resume:

model:
  norm: IN
  inputs: 4
  outputs: 2
  loss: 'l2'
  depth: 18
  use_layer: 3
  no_max_pool: False
  strides: [1,1,1,2]
  heteroscedastic: True
  position: False

optimizer:
  learning_rate: 1e-4
  weight_decay: 0.0

loader:
  batch_size: 64
  num_workers: 8

dataset:
  mode: volume
  data: !ENV ${DATA}/interim/ukb_liv_preprocessed_masked.h5
  group:
  info: !ENV ${DATA}/interim/ukb_all.csv
  column: age
  preload: False
  init_load: False
  fold: 0
  train: !ENV ${DATA}/interim/keys/train_liver_mainly_healthy.dat
  val:   !ENV ${DATA}/interim/keys/test_liver_mainly_healthy.dat
  pred:  !ENV ${DATA}/interim/keys/full_test_liver_mainly_healthy.dat
  gradcam:  !ENV ${DATA}/interim/keys/gradcam_liver_mainly_healthy.dat
  debug:

  data_augmentation: True
  crop_size:
  crop_margins:
  #crop_size: [100, 125, 105]
  #crop_margins: [5, 5, 5]
  gamma_range: [0.7, 1.3]
  patch_size:
  mirror_axis: 1
