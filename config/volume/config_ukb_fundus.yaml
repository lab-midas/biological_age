hydra:
  run:
    dir: ${env:OUT}/${project.name}/${project.job}/${now:%Y-%m-%d}/${now:%H-%M-%S}
  sweep:
    dir: ${env:OUT}/${project.name}/${project.job}/${now:%Y-%m-%d}/${now:%H-%M-%S}

project:
  name: age
  job: ukb_fundus
  seed: 42

trainer:
  gpus: 1
  max_epochs: 200
  benchmark: True
  deterministic: False  # not possible, since PyTorch did not implement maxpool deterministic backward path!
  #limit_train_batches: 0.1
  #limit_val_batches: 0.1
  #limit_val_batches: 0.25
  val_check_interval: 1.0
  #early_stop_callback: False

model:
  norm: IN
  inputs: 3   # RGB
  outputs: 2
  loss: 'l2'
  depth: 18
  use_layer: 3
  no_max_pool: False
  strides: [1,1,1,2]
  heteroscedastic: True
  position: False

optimizer:
  learning_rate: 1e-4
  weight_decay: 0.0

loader:
  batch_size: 8
  num_workers: 4

dataset:
  mode: volume
  data: ${env:DATA}/UKB/interim/ukb_fundus_preprocessed.h5
  group:
  info: ${env:DATA}/UKB/interim/ukb_all.csv
  column: age
  preload: False
  fold: 0
  train: ${env:DATA}/UKB/interim/keys/train_fundus.dat
  val:   ${env:DATA}/UKB/interim/keys/test_fundus.dat  # same as test.dat just with additional info if left/right fundus image of patient is available/taken
  debug:
  #debug: ${env:DATA}/UKB/interim/keys/debug_fundus.dat
  data_augmentation: True
  crop_size:
  crop_margins:
  #crop_size: [100, 125, 105]
  #crop_margins: [5, 5, 5]
  gamma_range: [0.9, 1.1]
  patch_size:
  mirror_axis: 1
